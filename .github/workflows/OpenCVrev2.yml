# .github/workflows/OpenCV.yml

name: Build Customizable OpenCV for Document Optimization

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # --- 用户配置区 ---
  # 1. 使用您确认的最新稳定版 OpenCV 4.12.0
  OPENCV_VERSION: '4.12.0'

  # 2. 为“文档优化”定制的模块列表 (core, imgproc, imgcodecs, highgui, ml, quality, features2d, flann, ximgproc)
  OPENCV_MODULES_LIST: "core,imgproc,imgcodecs,highgui,ml,quality,features2d,flann,ximgproc"
  # --- 用户配置区结束 ---

  INSTALL_DIR: ${{ github.workspace }}/install

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
          - os: macos-latest
          - os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install build dependencies
        shell: bash
        run: |
          python -m pip install numpy

      - name: Checkout OpenCV Source Code
        uses: actions/checkout@v4
        with:
          repository: opencv/opencv
          ref: ${{ env.OPENCV_VERSION }}
          path: opencv

      - name: Checkout OpenCV Contrib Source Code
        uses: actions/checkout@v4
        with:
          repository: opencv/opencv_contrib
          ref: ${{ env.OPENCV_VERSION }}
          path: opencv_contrib

      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        working-directory: ./opencv
        shell: pwsh
        run: |
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 `
            -DCMAKE_BUILD_TYPE=Release `
            -DOPENCV_EXTRA_MODULES_PATH=${{ github.workspace }}/opencv_contrib/modules `
            -DBUILD_LIST="${{ env.OPENCV_MODULES_LIST }}" `
            -DBUILD_ZLIB=OFF `
            -DBUILD_PNG=OFF `
            -DBUILD_JPEG=OFF `
            -DBUILD_TIFF=OFF `
            -DBUILD_WEBP=OFF `
            -DBUILD_SHARED_LIBS=ON -DBUILD_opencv_world=ON `
            -DWITH_IPP=OFF -DWITH_TBB=OFF -DWITH_OPENMP=OFF -DWITH_QT=OFF -DWITH_FFMPEG=OFF `
            -DBUILD_opencv_dnn=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_DOCS=OFF `
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }}

      - name: Configure CMake (macOS & Linux)
        if: runner.os != 'Windows'
        working-directory: ./opencv
        shell: bash
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DOPENCV_EXTRA_MODULES_PATH=${{ github.workspace }}/opencv_contrib/modules \
            -DBUILD_LIST=${{ env.OPENCV_MODULES_LIST }} \
            -DBUILD_ZLIB=OFF \
            -DBUILD_PNG=OFF \
            -DBUILD_JPEG=OFF \
            -DBUILD_TIFF=OFF \
            -DBUILD_WEBP=OFF \
            -DBUILD_SHARED_LIBS=ON -DBUILD_opencv_world=ON \
            -DWITH_IPP=OFF -DWITH_TBB=OFF -DWITH_OPENMP=OFF -DWITH_QT=OFF -DWITH_FFMPEG=OFF \
            -DBUILD_opencv_dnn=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_DOCS=OFF \
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }}

      - name: Build and Install OpenCV
        working-directory: ./opencv
        shell: bash
        run: |
          cmake --build build --config Release --target install -j4

      - name: Upload OpenCV Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opencv-world-doc-optimized-${{ runner.os }}
          path: ${{ env.INSTALL_DIR }}
          retention-days: 7

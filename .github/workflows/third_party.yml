name: Third-Party (jbig2enc + verapdf)

on:
  workflow_dispatch:   # ✅ 仅手动触发；没有 push/定时器等自动触发

jobs:
  # =================== Job 1: jbig2enc (+ Leptonica) ===================
  jbig2enc:
    name: jbig2enc 0.30 (+leptonica) — ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-14, windows-latest ]

    steps:
      - name: Show commit
        run: echo "Commit: ${{ github.sha }}"

      # ---------- Linux ----------
      - name: Linux deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential autoconf automake libtool pkg-config git \
            zlib1g-dev libpng-dev libjpeg-turbo8-dev libtiff-dev
      - name: Build Leptonica (Linux, from source)
        if: runner.os == 'Linux'
        run: |
          set -eux
          git clone --depth 1 https://github.com/DanBloomberg/leptonica.git
          cd leptonica
          ./autogen.sh
          ./configure --prefix="$PWD/../install_lept"
          make -j
          make install
      - name: Build jbig2enc 0.30 (Linux)
        if: runner.os == 'Linux'
        run: |
          set -eux
          git clone --depth 1 --branch 0.30 https://github.com/agl/jbig2enc.git
          cd jbig2enc
          ./autogen.sh
          PKG_CONFIG_PATH="$PWD/../install_lept/lib/pkgconfig" ./configure --prefix="$PWD/../install_jb2"
          make -j
          make install
      - name: Upload artifacts (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: jbig2enc-0.30-Linux-${{ github.sha }}
          path: install_jb2/**

      # ---------- macOS ----------
      - name: macOS deps (Homebrew)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install autoconf automake libtool pkg-config git \
                       libpng jpeg-turbo libtiff
      - name: Build Leptonica (macOS, from source)
        if: runner.os == 'macOS'
        run: |
          set -eux
          git clone --depth 1 https://github.com/DanBloomberg/leptonica.git
          cd leptonica
          ./autogen.sh
          ./configure --prefix="$PWD/../install_lept"
          make -j
          make install
      - name: Build jbig2enc 0.30 (macOS)
        if: runner.os == 'macOS'
        run: |
          set -eux
          git clone --depth 1 --branch 0.30 https://github.com/agl/jbig2enc.git
          cd jbig2enc
          ./autogen.sh
          PKG_CONFIG_PATH="$PWD/../install_lept/lib/pkgconfig" ./configure --prefix="$PWD/../install_jb2"
          make -j
          make install
      - name: Upload artifacts (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: jbig2enc-0.30-macOS-${{ github.sha }}
          path: install_jb2/**

      # ---------- Windows（MSYS2 + MINGW64）----------
      - name: Setup MSYS2
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          release: false
          update: true
          msystem: MINGW64
          install: >-
            base-devel
            git
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-libpng
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-libtiff
            mingw-w64-x86_64-zlib
      - name: Build Leptonica (Windows, from source / MSYS2)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          set -eux
          git clone --depth 1 https://github.com/DanBloomberg/leptonica.git
          cd leptonica
          ./autogen.sh
          ./configure --prefix="$PWD/../install_lept"
          make -j
          make install
      - name: Build jbig2enc 0.30 (Windows / MSYS2)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          set -eux
          git clone --depth 1 --branch 0.30 https://github.com/agl/jbig2enc.git
          cd jbig2enc
          ./autogen.sh
          PKG_CONFIG_PATH="$PWD/../install_lept/lib/pkgconfig" ./configure --prefix="$PWD/../install_jb2"
          make -j
          make install
      - name: Upload artifacts (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: jbig2enc-0.30-Windows-${{ github.sha }}
          path: install_jb2/**

  # =================== Job 2: veraPDF（直接下载官方包） ===================
  verapdf:
    name: veraPDF 1.28.2 — ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-14, windows-latest ]
    steps:
      - name: Download veraPDF (zip + asc)
        shell: bash
        run: |
          set -eux
          mkdir out && cd out
          curl -fLO https://software.verapdf.org/rel/arlington/1.28/verapdf-arlington-1.28.2-installer.zip
          curl -fLO https://software.verapdf.org/rel/arlington/1.28/verapdf-arlington-1.28.2-installer.zip.asc
      - name: Upload veraPDF bundle
        uses: actions/upload-artifact@v4
        with:
          name: verapdf-1.28.2-${{ runner.os }}
          path: out/**

name: jbig2enc (Windows only)

on:
  workflow_dispatch:  # manual trigger only

jobs:
  jbig2enc_windows:
    name: jbig2enc 0.30 - Windows (MSYS2/MINGW64)
    runs-on: windows-latest

    steps:
      - name: Setup MSYS2 (MINGW64)
        uses: msys2/setup-msys2@v2
        with:
          release: false
          update: true
          msystem: MINGW64
          install: >-
            base-devel
            autoconf
            automake
            libtool
            m4
            git
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-pkgconf

      - name: Build zlib (shared)
        shell: msys2 {0}
        run: |
          set -ex
          git clone --depth 1 https://github.com/madler/zlib.git
          cmake -S zlib -B build_zlib -G "MinGW Makefiles" \
                -DCMAKE_BUILD_TYPE=Release \
                -DBUILD_SHARED_LIBS=ON \
                -DCMAKE_INSTALL_PREFIX="$PWD/install_zlib"
          cmake --build build_zlib -j
          cmake --install build_zlib
          ls -l install_zlib/include/zlib.h
          ls -l install_zlib/lib/libz.dll.a
          ls -l install_zlib/bin/zlib*.dll

      - name: Build jbig2enc 0.30
        shell: msys2 {0}
        run: |
          set -ex
          ZPREFIX="$PWD/install_zlib"

          # 编译/链接参数：用绝对路径导入库 + winsock
          export ZLIB_CFLAGS="-I$ZPREFIX/include"
          export ZLIB_LIBS="$ZPREFIX/lib/libz.dll.a -lws2_32"
          export CPPFLAGS="$ZLIB_CFLAGS ${CPPFLAGS-}"
          export LDFLAGS="$ZLIB_LIBS ${LDFLAGS-}"
          export LIBS="$ZLIB_LIBS ${LIBS-}"

          # 给 autoconf 好信号（即便项目内还有自定义检测）
          cat > cache.site <<'EOF'
          ac_cv_header_zlib_h=yes
          ac_cv_lib_z_deflate=yes
          EOF
          export CONFIG_SITE="$PWD/cache.site"

          git clone --depth 1 --branch 0.30 https://github.com/agl/jbig2enc.git
          cd jbig2enc
          ./autogen.sh

          # 宽匹配补丁：把任何“zlib not/no found/detected”致命退出变为 no-op
          # 1) 先打印原始命中，便于审计
          echo '--- BEFORE PATCH (hits) ---' || true
          grep -n -Ei '(zlib).*(not|no).*(found|detect)' configure || true
          grep -n -Ei 'as_fn_error.*(zlib).*(not|no).*(found|detect)' configure || true

          # 2) 逐类处理（兼容多种展开/空白/标点）
          sed -i -E 's/^.*as_fn_error[^"]*"[^"]*(Z|z)lib[^"]*(not|no)[^"]*(found|detect)[^"]*".*$/: # patched: skip zlib fatal/g' configure
          sed -i -E 's/^.*(Z|z)lib[^[:alnum:]]*(not|no)[^[:alnum:]]*(found|detect).*exit 1.*$/: # patched: skip zlib fatal/g' configure
          sed -i -E 's/^.*(Z|z)lib[^[:alnum:]]*(not|no)[^[:alnum:]]*(found|detect).*$/: # patched: skip zlib fatal/g' configure

          # 3) 再打印确认
          echo '--- AFTER PATCH (hits) ---' || true
          grep -n -Ei '(zlib).*(not|no).*(found|detect)' configure || true
          grep -n -Ei 'as_fn_error.*(zlib).*(not|no).*(found|detect)' configure || true

          # configure（失败则带日志尾部）
          ./configure --prefix="$PWD/../install_jb2" \
            || { echo "=== tail config.log ==="; tail -n 200 config.log || true; exit 1; }

          make -j
          make install

      - name: Collect artifact
        shell: msys2 {0}
        run: |
          set -ex
          mkdir -p out/bin out/include out/lib out/logs
          cp -v install_jb2/bin/jbig2enc.exe out/bin/
          cp -v install_zlib/bin/zlib*.dll out/bin/ || true
          [ -f jbig2enc/config.log ] && cp -v jbig2enc/config.log out/logs/ || true
          [ -d install_jb2/include ] && cp -rv install_jb2/include/* out/include/ || true
          [ -d install_jb2/lib ] && cp -rv install_jb2/lib/* out/lib/ || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: jbig2enc-0.30-Windows
          path: out/**

# .github/workflows/OpenCV.yml

name: Build Minimal OpenCV with vcpkg (No JSON)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg

  # --- 关键修正 1: 使用正确的、最简单的特性名 ---
  # vcpkg 中 opencv4 的特性就是 'imgproc' 和 'calib3d'
  VCPKG_PACKAGES_COMMAND: "opencv4[imgproc,calib3d,world]"
  VCPKG_PACKAGES_KEY: "opencv4-imgproc-calib3d-world" # 相应更新缓存键

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: macos-latest
            triplet: x64-osx
          - os: ubuntu-latest
            triplet: x64-linux

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: ${{ env.VCPKG_ROOT }}
          key: vcpkg-${{ matrix.os }}-${{ env.VCPKG_PACKAGES_KEY }}
          restore-keys: |
            vcpkg-${{ matrix.os }}-

      # --- 关键修正 2: 强制更新 vcpkg 仓库自身 ---
      
      # For Unix (Linux/macOS)
      - name: Update and Bootstrap vcpkg (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          if [ ! -d "${{ env.VCPKG_ROOT }}" ]; then
            git clone https://github.com/microsoft/vcpkg.git "${{ env.VCPKG_ROOT }}"
          fi
          # 强制更新 vcpkg 仓库，获取最新的包定义
          cd "${{ env.VCPKG_ROOT }}"
          git pull
          # 重新运行引导程序，以防工具本身需要更新
          ./bootstrap-vcpkg.sh

      # For Windows
      - name: Update and Bootstrap vcpkg (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          if (-not (Test-Path "${{ env.VCPKG_ROOT }}")) {
            git clone https://github.com/microsoft/vcpkg.git "${{ env.VCPKG_ROOT }}"
          }
          # 强制更新 vcpkg 仓库，获取最新的包定义
          cd "${{ env.VCPKG_ROOT }}"
          git pull
          # 重新运行引导程序，以防工具本身需要更新
          ./bootstrap-vcpkg.bat

      # ---------------------------------------------------

      # Install for Unix (Linux/macOS)
      - name: Install OpenCV (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          ${{ env.VCPKG_ROOT }}/vcpkg install ${{ env.VCPKG_PACKAGES_COMMAND }} --triplet ${{ matrix.triplet }}

      # Install for Windows
      - name: Install OpenCV (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          ${{ env.VCPKG_ROOT }}/vcpkg install ${{ env.VCPKG_PACKAGES_COMMAND }} --triplet ${{ matrix.triplet }}

      - name: Upload OpenCV Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opencv-minimal-${{ matrix.os }}
          path: ${{ env.VCPKG_ROOT }}/installed/${{ matrix.triplet }}
          retention-days: 7

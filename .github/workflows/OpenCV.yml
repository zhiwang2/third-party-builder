# .github/workflows/OpenCV.yml

name: Build Minimal OpenCV with vcpkg (No JSON)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  VCPKG_PACKAGES: "opencv4[core,imgproc,calib3d,world]"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            triplet: x64-windows
            shell: pwsh
          - os: macos-latest
            triplet: x64-osx
            shell: bash
          - os: ubuntu-latest
            triplet: x64-linux
            shell: bash

    runs-on: ${{ matrix.os }}

    # --- 关键修正 ---
    # 在这里为整个 Job 设置默认的 shell
    # 这样下面的每个 run 步骤都会自动使用正确的 shell
    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: ${{ env.VCPKG_ROOT }}
          key: vcpkg-${{ matrix.os }}-${{ env.VCPKG_PACKAGES }}
          restore-keys: |
            vcpkg-${{ matrix.os }}-

      # 在这个步骤中，不再需要单独指定 'shell:'
      - name: Bootstrap vcpkg
        run: |
          if [ ! -d "${{ env.VCPKG_ROOT }}" ]; then
            git clone https://github.com/microsoft/vcpkg.git "${{ env.VCPKG_ROOT }}"
          fi
          cd "${{ env.VCPKG_ROOT }}"
          ./bootstrap-vcpkg.sh

      # 这里也不再需要单独指定 'shell:'
      - name: Install OpenCV using vcpkg (Classic Mode)
        run: |
          ${{ env.VCPKG_ROOT }}/vcpkg install ${{ env.VCPKG_PACKAGES }} --triplet ${{ matrix.triplet }}

      - name: Upload OpenCV Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opencv-minimal-${{ matrix.os }}
          path: ${{ env.VCPKG_ROOT }}/installed/${{ matrix.triplet }}
          retention-days: 7

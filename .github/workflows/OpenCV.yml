# .github/workflows/OpenCV.yml

name: Build Minimal OpenCV from Source

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  OPENCV_VERSION: '4.9.0'
  INSTALL_DIR: ${{ github.workspace }}/install

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
          - os: macos-latest
          - os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install build dependencies
        shell: bash
        run: |
          python -m pip install numpy

      - name: Checkout OpenCV Source Code
        uses: actions/checkout@v4
        with:
          repository: opencv/opencv
          ref: ${{ env.OPENCV_VERSION }}
          path: opencv

      # --- 关键修正: 将 highgui 添加到 BUILD_LIST ---
      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        working-directory: ./opencv
        shell: bash
        run: |
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_LIST=core,imgproc,imgcodecs,highgui,calib3d \
            -DBUILD_SHARED_LIBS=ON -DBUILD_opencv_world=ON \
            -DWITH_IPP=OFF -DWITH_TBB=OFF -DWITH_OPENMP=OFF -DWITH_QT=OFF -DWITH_FFMPEG=OFF \
            -DBUILD_opencv_dnn=OFF -DBUILD_opencv_ml=OFF -DBUILD_opencv_video=OFF \
            -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_DOCS=OFF \
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }}

      - name: Configure CMake (macOS & Linux)
        if: runner.os != 'Windows'
        working-directory: ./opencv
        shell: bash
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_LIST=core,imgproc,imgcodecs,highgui,calib3d \
            -DBUILD_SHARED_LIBS=ON -DBUILD_opencv_world=ON \
            -DWITH_IPP=OFF -DWITH_TBB=OFF -DWITH_OPENMP=OFF -DWITH_QT=OFF -DWITH_FFMPEG=OFF \
            -DBUILD_opencv_dnn=OFF -DBUILD_opencv_ml=OFF -DBUILD_opencv_video=OFF \
            -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_DOCS=OFF \
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }}

      # --------------------------------------------------------

      - name: Build and Install OpenCV
        working-directory: ./opencv
        shell: bash
        run: |
          cmake --build build --config Release --target install -j4

      - name: Upload OpenCV Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opencv-minimal-${{ runner.os }}
          path: ${{ env.INSTALL_DIR }}
          retention-days: 7

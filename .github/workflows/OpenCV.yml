# .github/workflows/OpenCV.yml

name: Build Minimal OpenCV with vcpkg (No JSON)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# --- 全局环境变量 ---
env:
  # vcpkg 的安装目录
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  
  # 关键：在这里直接定义要安装的 OpenCV 包及其特性
  # 格式为 '包名[特性1,特性2,...]'
  # 这会关闭默认特性，只安装我们指定的模块
  VCPKG_PACKAGES: "opencv4[core,imgproc,calib3d,world]"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            triplet: x64-windows
            shell: pwsh
          - os: macos-latest
            triplet: x64-osx
            shell: bash
          - os: ubuntu-latest
            triplet: x64-linux
            shell: bash

    runs-on: ${{ matrix.os }}

    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 缓存 vcpkg
      # 注意：缓存的 key 现在直接与我们定义的包列表挂钩
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: ${{ env.VCPKG_ROOT }}
          key: vcpkg-${{ matrix.os }}-${{ env.VCPKG_PACKAGES }}
          restore-keys: |
            vcpkg-${{ matrix.os }}-

      # 3. 安装并引导 vcpkg (如果缓存未命中)
      - name: Bootstrap vcpkg
        shell: ${{ matrix.shell }}
        run: |
          if [ ! -d "${{ env.VCPKG_ROOT }}" ]; then
            git clone https://github.com/microsoft/vcpkg.git "${{ env.VCPKG_ROOT }}"
          fi
          cd "${{ env.VCPKG_ROOT }}"
          ./bootstrap-vcpkg.sh

      # 4. 使用 vcpkg 安装 OpenCV (核心改动)
      # 直接从环境变量读取包列表进行安装
      - name: Install OpenCV using vcpkg (Classic Mode)
        shell: ${{ matrix.shell }}
        run: |
          ${{ env.VCPKG_ROOT }}/vcpkg install ${{ env.VCPKG_PACKAGES }} --triplet ${{ matrix.triplet }}

      # 5. 上传编译产物
      - name: Upload OpenCV Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opencv-minimal-${{ matrix.os }}
          path: ${{ env.VCPKG_ROOT }}/installed/${{ matrix.triplet }}
          retention-days: 7
